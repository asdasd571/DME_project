# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.schema_types import SchemaTypes  # noqa: F401,E501
from swagger_server import util


class DeliverySchema(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, type: SchemaTypes=None, delivery_schema_id: str=None, schema: str=None):  # noqa: E501
        """DeliverySchema - a model defined in Swagger

        :param type: The type of this DeliverySchema.  # noqa: E501
        :type type: SchemaTypes
        :param delivery_schema_id: The delivery_schema_id of this DeliverySchema.  # noqa: E501
        :type delivery_schema_id: str
        :param schema: The schema of this DeliverySchema.  # noqa: E501
        :type schema: str
        """
        self.swagger_types = {
            'type': SchemaTypes,
            'delivery_schema_id': str,
            'schema': str
        }

        self.attribute_map = {
            'type': 'type',
            'delivery_schema_id': 'deliverySchemaId',
            'schema': 'schema'
        }
        self._type = type
        self._delivery_schema_id = delivery_schema_id
        self._schema = schema

    @classmethod
    def from_dict(cls, dikt) -> 'DeliverySchema':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The DeliverySchema of this DeliverySchema.  # noqa: E501
        :rtype: DeliverySchema
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self) -> SchemaTypes:
        """Gets the type of this DeliverySchema.


        :return: The type of this DeliverySchema.
        :rtype: SchemaTypes
        """
        return self._type

    @type.setter
    def type(self, type: SchemaTypes):
        """Sets the type of this DeliverySchema.


        :param type: The type of this DeliverySchema.
        :type type: SchemaTypes
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")  # noqa: E501

        self._type = type

    @property
    def delivery_schema_id(self) -> str:
        """Gets the delivery_schema_id of this DeliverySchema.

        A Data Producer may support one or more delivery schemas and for each supported schema type a delivery schema identifier is assigned. A Data Consumer uses this attribute while creating a data job and request to deliver the data using specific schema type which is identified by this attribute.  # noqa: E501

        :return: The delivery_schema_id of this DeliverySchema.
        :rtype: str
        """
        return self._delivery_schema_id

    @delivery_schema_id.setter
    def delivery_schema_id(self, delivery_schema_id: str):
        """Sets the delivery_schema_id of this DeliverySchema.

        A Data Producer may support one or more delivery schemas and for each supported schema type a delivery schema identifier is assigned. A Data Consumer uses this attribute while creating a data job and request to deliver the data using specific schema type which is identified by this attribute.  # noqa: E501

        :param delivery_schema_id: The delivery_schema_id of this DeliverySchema.
        :type delivery_schema_id: str
        """
        if delivery_schema_id is None:
            raise ValueError("Invalid value for `delivery_schema_id`, must not be `None`")  # noqa: E501

        self._delivery_schema_id = delivery_schema_id

    @property
    def schema(self) -> str:
        """Gets the schema of this DeliverySchema.

        The schema serialized to string. If this attribute is not present, the schema is assumed to be known from the DME type definition that is referenced by dmeTypeId  # noqa: E501

        :return: The schema of this DeliverySchema.
        :rtype: str
        """
        return self._schema

    @schema.setter
    def schema(self, schema: str):
        """Sets the schema of this DeliverySchema.

        The schema serialized to string. If this attribute is not present, the schema is assumed to be known from the DME type definition that is referenced by dmeTypeId  # noqa: E501

        :param schema: The schema of this DeliverySchema.
        :type schema: str
        """

        self._schema = schema
