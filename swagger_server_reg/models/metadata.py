# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server_reg.models.base_model_ import Model
from swagger_server_reg import util


class Metadata(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, data_category: List[str]=None, rat: List[str]=None):  # noqa: E501
        """Metadata - a model defined in Swagger

        :param data_category: The data_category of this Metadata.  # noqa: E501
        :type data_category: List[str]
        :param rat: The rat of this Metadata.  # noqa: E501
        :type rat: List[str]
        """
        self.swagger_types = {
            'data_category': List[str],
            'rat': List[str]
        }

        self.attribute_map = {
            'data_category': 'dataCategory',
            'rat': 'rat'
        }
        self._data_category = data_category
        self._rat = rat

    @classmethod
    def from_dict(cls, dikt) -> 'Metadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Metadata of this Metadata.  # noqa: E501
        :rtype: Metadata
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_category(self) -> List[str]:
        """Gets the data_category of this Metadata.

        Defines the category of the DME type e.g., PM counters  # noqa: E501

        :return: The data_category of this Metadata.
        :rtype: List[str]
        """
        return self._data_category

    @data_category.setter
    def data_category(self, data_category: List[str]):
        """Sets the data_category of this Metadata.

        Defines the category of the DME type e.g., PM counters  # noqa: E501

        :param data_category: The data_category of this Metadata.
        :type data_category: List[str]
        """

        self._data_category = data_category

    @property
    def rat(self) -> List[str]:
        """Gets the rat of this Metadata.

        Defines the radio access technology e.g., 5G  # noqa: E501

        :return: The rat of this Metadata.
        :rtype: List[str]
        """
        return self._rat

    @rat.setter
    def rat(self, rat: List[str]):
        """Sets the rat of this Metadata.

        Defines the radio access technology e.g., 5G  # noqa: E501

        :param rat: The rat of this Metadata.
        :type rat: List[str]
        """

        self._rat = rat
